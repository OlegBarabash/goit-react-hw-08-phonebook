{"version":3,"file":"static/js/484.b7a64fd6.chunk.js","mappings":"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","sources":["components/Forms.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 94%;\n  border: 1px solid #ccc;\n  background: #fff;\n  margin: 0 0 5px;\n  padding: 10px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 94%;\n  border: 1px solid #ccc;\n  background: #fff;\n  margin: 0 0 5px;\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 100%;\n  border: none;\n  background: #4caf50;\n  color: #fff;\n  margin: 0 0 5px;\n  padding: 10px;\n  font-size: 15px;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(({ name }) => name.toLowerCase().includes(filter))\n);\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  Label,\n  StyledField,\n  Button,\n  ErrorMsg,\n} from '../Forms.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { MdOutlineWarningAmber } from 'react-icons/md';\nimport { addContact } from 'redux/contacts/operations';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.number()\n    .min(1000000, 'Too Short!')\n    .max(999999999999, 'Too Long!')\n    .positive('Must be positive')\n    .integer('integer')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const onAdd = data => {\n    const isExist = contacts.some(\n      ({ name }) => name.toLowerCase() === data.name.toLowerCase()\n    );\n    isExist\n      ? toast('Try different name', {\n          icon: <MdOutlineWarningAmber />,\n        })\n      : dispatch(addContact(data));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {\n          onAdd(values);\n          actions.resetForm();\n        }}\n      >\n        <StyledForm>\n          <Label>\n            Name\n            <StyledField type=\"text\" name=\"name\" />\n            <ErrorMsg name=\"name\" component=\"div\" />\n          </Label>\n          <Label>\n            Tel. number\n            <StyledField type=\"tel\" name=\"number\" />\n            <ErrorMsg name=\"number\" component=\"div\" />\n          </Label>\n          <Button type=\"submit\">Add Contact</Button>\n        </StyledForm>\n      </Formik>\n      <Toaster />\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { Label, StyledInput } from '../Forms.styled';\nimport { setContactsFilter } from 'redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = filter => dispatch(setContactsFilter(filter));\n\n  return (\n    <Label>\n      Find contacts by name\n      <StyledInput\n        type=\"text\"\n        name=\"name\"\n        onChange={e => handleFilterChange(e.target.value.toLowerCase())}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid #c9c9c9;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const DeleteBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ListItem, List, DeleteBtn } from './ContactList.styled';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { MdDeleteForever } from 'react-icons/md';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {filteredContacts.length !== 0 ? (\n        <List>\n          {filteredContacts.map(cont => (\n            <ListItem key={cont.id}>\n              {cont.name}: {cont.number}\n              <DeleteBtn onClick={() => onDelete(cont.id)}>\n                <MdDeleteForever color=\"#e84343\" size={20} />\n              </DeleteBtn>\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <p>Not found!</p>\n      )}\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const errorNotify = () => {\n    toast.error('Something went wrong!', {\n      id: 'clipboard',\n    });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>My contacts</title>\n      </Helmet>\n      <ContactForm />\n      {!contacts.length && !isLoading ? (\n        <h2>No contacts</h2>\n      ) : (\n        <>\n          <h2>Contacts</h2>\n          {isLoading ? <Loader /> : <Filter />}\n          {contacts.length > 0 && <ContactList />}\n        </>\n      )}\n      {error && errorNotify()}\n      <Toaster />\n    </>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","StyledField","Field","_templateObject3","StyledInput","_templateObject4","Button","_templateObject5","ErrorMsg","ErrorMessage","_templateObject6","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","_ref","name","toLowerCase","includes","SignupSchema","Yup","shape","min","max","required","number","positive","integer","ContactForm","useSelector","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","data","some","toast","icon","MdOutlineWarningAmber","addContact","resetForm","type","component","Toaster","Filter","onChange","e","target","value","setContactsFilter","ListItem","List","DeleteBtn","ContactList","filteredContacts","length","map","cont","onClick","id","deleteContact","MdDeleteForever","color","size","Contacts","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}